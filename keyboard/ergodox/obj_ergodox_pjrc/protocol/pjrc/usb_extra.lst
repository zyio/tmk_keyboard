   1               		.file	"usb_extra.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.usb_extra_send,"ax",@progbits
  11               	.global	usb_extra_send
  13               	usb_extra_send:
  14               	.LFB6:
  15               		.file 1 "../../protocol/pjrc/usb_extra.c"
   1:../../protocol/pjrc/usb_extra.c **** /* USB Keyboard Plus Debug Channel Example for Teensy USB Development Board
   2:../../protocol/pjrc/usb_extra.c ****  * http://www.pjrc.com/teensy/usb_keyboard.html
   3:../../protocol/pjrc/usb_extra.c ****  * Copyright (c) 2009 PJRC.COM, LLC
   4:../../protocol/pjrc/usb_extra.c ****  *
   5:../../protocol/pjrc/usb_extra.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy
   6:../../protocol/pjrc/usb_extra.c ****  * of this software and associated documentation files (the "Software"), to deal
   7:../../protocol/pjrc/usb_extra.c ****  * in the Software without restriction, including without limitation the rights
   8:../../protocol/pjrc/usb_extra.c ****  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:../../protocol/pjrc/usb_extra.c ****  * copies of the Software, and to permit persons to whom the Software is
  10:../../protocol/pjrc/usb_extra.c ****  * furnished to do so, subject to the following conditions:
  11:../../protocol/pjrc/usb_extra.c ****  *
  12:../../protocol/pjrc/usb_extra.c ****  * The above copyright notice and this permission notice shall be included in
  13:../../protocol/pjrc/usb_extra.c ****  * all copies or substantial portions of the Software.
  14:../../protocol/pjrc/usb_extra.c ****  *
  15:../../protocol/pjrc/usb_extra.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:../../protocol/pjrc/usb_extra.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:../../protocol/pjrc/usb_extra.c ****  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:../../protocol/pjrc/usb_extra.c ****  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:../../protocol/pjrc/usb_extra.c ****  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:../../protocol/pjrc/usb_extra.c ****  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:../../protocol/pjrc/usb_extra.c ****  * THE SOFTWARE.
  22:../../protocol/pjrc/usb_extra.c ****  */
  23:../../protocol/pjrc/usb_extra.c **** 
  24:../../protocol/pjrc/usb_extra.c **** #include <util/delay.h>
  25:../../protocol/pjrc/usb_extra.c **** #include <avr/interrupt.h>
  26:../../protocol/pjrc/usb_extra.c **** #include "host.h"
  27:../../protocol/pjrc/usb_extra.c **** #include "usb_extra.h"
  28:../../protocol/pjrc/usb_extra.c **** 
  29:../../protocol/pjrc/usb_extra.c **** 
  30:../../protocol/pjrc/usb_extra.c **** int8_t usb_extra_send(uint8_t report_id, uint16_t data)
  31:../../protocol/pjrc/usb_extra.c **** {
  16               		.loc 1 31 0
  17               		.cfi_startproc
  18               	.LVL0:
  19 0000 FF92      		push r15
  20               	.LCFI0:
  21               		.cfi_def_cfa_offset 3
  22               		.cfi_offset 15, -2
  23 0002 0F93      		push r16
  24               	.LCFI1:
  25               		.cfi_def_cfa_offset 4
  26               		.cfi_offset 16, -3
  27 0004 1F93      		push r17
  28               	.LCFI2:
  29               		.cfi_def_cfa_offset 5
  30               		.cfi_offset 17, -4
  31 0006 CF93      		push r28
  32               	.LCFI3:
  33               		.cfi_def_cfa_offset 6
  34               		.cfi_offset 28, -5
  35 0008 DF93      		push r29
  36               	.LCFI4:
  37               		.cfi_def_cfa_offset 7
  38               		.cfi_offset 29, -6
  39               	/* prologue: function */
  40               	/* frame size = 0 */
  41               	/* stack size = 5 */
  42               	.L__stack_usage = 5
  43 000a D82F      		mov r29,r24
  44 000c 8B01      		movw r16,r22
  32:../../protocol/pjrc/usb_extra.c **** 	uint8_t intr_state, timeout;
  33:../../protocol/pjrc/usb_extra.c **** 
  34:../../protocol/pjrc/usb_extra.c **** 	if (!usb_configured()) return -1;
  45               		.loc 1 34 0
  46 000e 0E94 0000 		call usb_configured
  47               	.LVL1:
  48 0012 8111      		cpse r24,__zero_reg__
  49 0014 00C0      		rjmp .L2
  50               	.L5:
  51 0016 8FEF      		ldi r24,lo8(-1)
  52 0018 00C0      		rjmp .L3
  53               	.L2:
  35:../../protocol/pjrc/usb_extra.c **** 	intr_state = SREG;
  54               		.loc 1 35 0
  55 001a 9FB7      		in r25,__SREG__
  56               	.LVL2:
  36:../../protocol/pjrc/usb_extra.c **** 	cli();
  57               		.loc 1 36 0
  58               	/* #APP */
  59               	 ;  36 "../../protocol/pjrc/usb_extra.c" 1
  60 001c F894      		cli
  61               	 ;  0 "" 2
  37:../../protocol/pjrc/usb_extra.c **** 	UENUM = EXTRA_ENDPOINT;
  62               		.loc 1 37 0
  63               	/* #NOAPP */
  64 001e 84E0      		ldi r24,lo8(4)
  65 0020 8093 E900 		sts 233,r24
  38:../../protocol/pjrc/usb_extra.c **** 	timeout = UDFNUML + 50;
  66               		.loc 1 38 0
  67 0024 C091 E400 		lds r28,228
  68 0028 CE5C      		subi r28,lo8(-(50))
  69               	.LVL3:
  39:../../protocol/pjrc/usb_extra.c **** 	while (1) {
  40:../../protocol/pjrc/usb_extra.c **** 		// are we ready to transmit?
  41:../../protocol/pjrc/usb_extra.c **** 		if (UEINTX & (1<<RWAL)) break;
  42:../../protocol/pjrc/usb_extra.c **** 		SREG = intr_state;
  43:../../protocol/pjrc/usb_extra.c **** 		// has the USB gone offline?
  44:../../protocol/pjrc/usb_extra.c **** 		if (!usb_configured()) return -1;
  45:../../protocol/pjrc/usb_extra.c **** 		// have we waited too long?
  46:../../protocol/pjrc/usb_extra.c **** 		if (UDFNUML == timeout) return -1;
  47:../../protocol/pjrc/usb_extra.c **** 		// get ready to try checking again
  48:../../protocol/pjrc/usb_extra.c **** 		intr_state = SREG;
  49:../../protocol/pjrc/usb_extra.c **** 		cli();
  50:../../protocol/pjrc/usb_extra.c **** 		UENUM = EXTRA_ENDPOINT;
  70               		.loc 1 50 0
  71 002a 84E0      		ldi r24,lo8(4)
  72 002c F82E      		mov r15,r24
  73               	.L6:
  41:../../protocol/pjrc/usb_extra.c **** 		SREG = intr_state;
  74               		.loc 1 41 0
  75 002e 8091 E800 		lds r24,232
  76 0032 85FD      		sbrc r24,5
  77 0034 00C0      		rjmp .L4
  42:../../protocol/pjrc/usb_extra.c **** 		// has the USB gone offline?
  78               		.loc 1 42 0
  79 0036 9FBF      		out __SREG__,r25
  44:../../protocol/pjrc/usb_extra.c **** 		// have we waited too long?
  80               		.loc 1 44 0
  81 0038 0E94 0000 		call usb_configured
  82               	.LVL4:
  83 003c 8823      		tst r24
  84 003e 01F0      		breq .L5
  46:../../protocol/pjrc/usb_extra.c **** 		// get ready to try checking again
  85               		.loc 1 46 0
  86 0040 8091 E400 		lds r24,228
  87 0044 8C17      		cp r24,r28
  88 0046 01F0      		breq .L5
  48:../../protocol/pjrc/usb_extra.c **** 		cli();
  89               		.loc 1 48 0
  90 0048 9FB7      		in r25,__SREG__
  91               	.LVL5:
  49:../../protocol/pjrc/usb_extra.c **** 		UENUM = EXTRA_ENDPOINT;
  92               		.loc 1 49 0
  93               	/* #APP */
  94               	 ;  49 "../../protocol/pjrc/usb_extra.c" 1
  95 004a F894      		cli
  96               	 ;  0 "" 2
  97               		.loc 1 50 0
  98               	/* #NOAPP */
  99 004c F092 E900 		sts 233,r15
  51:../../protocol/pjrc/usb_extra.c **** 	}
 100               		.loc 1 51 0
 101 0050 00C0      		rjmp .L6
 102               	.L4:
  52:../../protocol/pjrc/usb_extra.c **** 
  53:../../protocol/pjrc/usb_extra.c **** 	UEDATX = report_id;
 103               		.loc 1 53 0
 104 0052 D093 F100 		sts 241,r29
  54:../../protocol/pjrc/usb_extra.c ****         UEDATX = data&0xFF;
 105               		.loc 1 54 0
 106 0056 0093 F100 		sts 241,r16
  55:../../protocol/pjrc/usb_extra.c ****         UEDATX = (data>>8)&0xFF;
 107               		.loc 1 55 0
 108 005a 1093 F100 		sts 241,r17
  56:../../protocol/pjrc/usb_extra.c **** 
  57:../../protocol/pjrc/usb_extra.c **** 	UEINTX = 0x3A;
 109               		.loc 1 57 0
 110 005e 8AE3      		ldi r24,lo8(58)
 111 0060 8093 E800 		sts 232,r24
  58:../../protocol/pjrc/usb_extra.c **** 	SREG = intr_state;
 112               		.loc 1 58 0
 113 0064 9FBF      		out __SREG__,r25
  59:../../protocol/pjrc/usb_extra.c **** 	return 0;
 114               		.loc 1 59 0
 115 0066 80E0      		ldi r24,0
 116               	.LVL6:
 117               	.L3:
 118               	/* epilogue start */
  60:../../protocol/pjrc/usb_extra.c **** }
 119               		.loc 1 60 0
 120 0068 DF91      		pop r29
 121               	.LVL7:
 122 006a CF91      		pop r28
 123 006c 1F91      		pop r17
 124 006e 0F91      		pop r16
 125               	.LVL8:
 126 0070 FF90      		pop r15
 127 0072 0895      		ret
 128               		.cfi_endproc
 129               	.LFE6:
 131               		.section	.text.usb_extra_consumer_send,"ax",@progbits
 132               	.global	usb_extra_consumer_send
 134               	usb_extra_consumer_send:
 135               	.LFB7:
  61:../../protocol/pjrc/usb_extra.c **** 
  62:../../protocol/pjrc/usb_extra.c **** int8_t usb_extra_consumer_send(uint16_t bits)
  63:../../protocol/pjrc/usb_extra.c **** {
 136               		.loc 1 63 0
 137               		.cfi_startproc
 138               	.LVL9:
 139               	/* prologue: function */
 140               	/* frame size = 0 */
 141               	/* stack size = 0 */
 142               	.L__stack_usage = 0
  64:../../protocol/pjrc/usb_extra.c **** 	return usb_extra_send(REPORT_ID_CONSUMER, bits);
 143               		.loc 1 64 0
 144 0000 BC01      		movw r22,r24
 145 0002 83E0      		ldi r24,lo8(3)
 146               	.LVL10:
 147 0004 0C94 0000 		jmp usb_extra_send
 148               	.LVL11:
 149               		.cfi_endproc
 150               	.LFE7:
 152               		.section	.text.usb_extra_system_send,"ax",@progbits
 153               	.global	usb_extra_system_send
 155               	usb_extra_system_send:
 156               	.LFB8:
  65:../../protocol/pjrc/usb_extra.c **** }
  66:../../protocol/pjrc/usb_extra.c **** 
  67:../../protocol/pjrc/usb_extra.c **** int8_t usb_extra_system_send(uint16_t bits)
  68:../../protocol/pjrc/usb_extra.c **** {
 157               		.loc 1 68 0
 158               		.cfi_startproc
 159               	.LVL12:
 160               	/* prologue: function */
 161               	/* frame size = 0 */
 162               	/* stack size = 0 */
 163               	.L__stack_usage = 0
  69:../../protocol/pjrc/usb_extra.c **** 	return usb_extra_send(REPORT_ID_SYSTEM, bits);
 164               		.loc 1 69 0
 165 0000 BC01      		movw r22,r24
 166 0002 82E0      		ldi r24,lo8(2)
 167               	.LVL13:
 168 0004 0C94 0000 		jmp usb_extra_send
 169               	.LVL14:
 170               		.cfi_endproc
 171               	.LFE8:
 173               		.text
 174               	.Letext0:
 175               		.file 2 "/usr/lib/avr/include/stdint.h"
 176               		.file 3 "../../protocol/pjrc/usb.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 usb_extra.c
     /tmp/ccBtFNDf.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccBtFNDf.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccBtFNDf.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccBtFNDf.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccBtFNDf.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccBtFNDf.s:13     .text.usb_extra_send:0000000000000000 usb_extra_send
     /tmp/ccBtFNDf.s:134    .text.usb_extra_consumer_send:0000000000000000 usb_extra_consumer_send
     /tmp/ccBtFNDf.s:155    .text.usb_extra_system_send:0000000000000000 usb_extra_system_send

UNDEFINED SYMBOLS
usb_configured
